name: Compile LaTeX Documents  

on: [push, workflow_dispatch]

permissions:
    contents: write

jobs:
    latex_release:
        runs-on: ubuntu-latest
        steps:
          - name: Checkout Repository
            uses: actions/checkout@v4.2.2
          - name: Get Project List
            run: |
                mkdir -p projects
                gh repo list -L 200 --json \
                name,description,createdAt,updatedAt,\
                forkCount,stargazerCount,watchers,languages,\
                primaryLanguage,repositoryTopics,isArchived,\
                isFork,isPrivate,isTemplate \
                $OWNER > projects/repoList.json
            env:
                GH_TOKEN: ${{ secrets.WEBSITEPAT }} # Limited PAT
                OWNER: ${{ github.repository_owner }}
          - name: Extract Project Names (repoList)
            uses: mikefarah/yq@v4.44.3
            with:
                cmd: yq e -r '.[].name' projects/repoList.json > projects/repoList
          - name: Get Project Readmes
            run: |
                shopt -s extglob
                cd projects
                cat repoList | while read line; do
                    git clone --depth 1 https://$GH_TOKEN@github.com/$OWNER/$line.git
                    cd $line
                    git sparse-checkout init --cone
                    git sparse-checkout set documents
                    find . -type f ! -path './documents/README.md' -exec rm -f '{}' +
                    find . -type d ! -path './documents' ! -path '.' -exec rm -rf '{}' +
                    cd ..
                done
            env:
                GH_TOKEN: ${{ secrets.WEBSITEPAT }}
                OWNER: ${{ github.repository_owner }}
          - uses: actions/upload-artifact@v4
            with:
                name: project_artifact
                path: |
                    projects/
          - name: Compile Latex Documents
            uses: xu-cheng/texlive-action@v3
            with:
                os: debian
                run: |
                    find . -type f -iname "*.tex" | while read fname; do \
                        program=$(sed "1q;d" "$fname" | sed -n "s/% !TEX program = //p"); \
                        args=$(sed "2q;d" "$fname" | sed -n "s/% !TEX options = //p" | sed "s/%DOC%//"); \
                        echo "Compiling $fname using $program with $args"; \
                        eval "$program $args $fname"; \
                    done
          - name: Import GPG Key
            uses: crazy-max/ghaction-import-gpg@cb9bde2e2525e640591a934b1fd28eef1dcaf5e5
            with:
                gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
                passphrase: ${{ secrets.PASSPHRASE }}
                trust_level: 5
          - name: Decrypt Signature Image
            run: |
                gpg -d -o templates/signature.tar templates/signature.tar.gpg
                tar -xvf templates/signature.tar --directory templates
          - name: Digitally Sign PDF Documents
            env:
                secret_passphrase: ${{ secrets.PASSPHRASE }}
            if: ${{ env.secret_passphrase != '' }}
            run: |
                find . -type f -iname "*.pdf" | while read fname; do
                    dirname=`dirname $fname`
                    filename=`basename $fname`
                    gpg --pinentry-mode loopback --passphrase ${{ secrets.PASSPHRASE }} --clearsign --not-dash-escaped "${dirname}/$filename"
                    mv "${dirname}/$filename".asc "${dirname}/$filename"
                    gpg --pinentry-mode loopback --passphrase ${{ secrets.PASSPHRASE }} --detach-sig "${dirname}/$filename"
                done
          - name: Delete Previous Release
            run: gh release delete latest --cleanup-tag
            continue-on-error: true
            env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          - name: Create Latest Release (always)
            uses: softprops/action-gh-release@v2.1.0
            with:
                files: |
                    *.pdf
                    *.sig
                name: latest
                tag_name: latest
                make_latest: true
                body: Personal Documents Compiled via LaTeX
          - name: Create Tagged Release (if push is tagged)
            if: startsWith(github.ref, 'refs/tags/')
            uses: softprops/action-gh-release@v2.0.9
            with:
                files: |
                    *.pdf
                    *.sig
                generate_release_notes: true
                make_latest: true
                body: Personal Documents Compiled via LaTeX